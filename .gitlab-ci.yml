default:
  image: ruby:3.2
  before_script:
    - bundle install --path vendor/bundle

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

rubocop:
  stage: build
  script:
    - bundle exec rubocop --require code_scanning --format CodeScanning::SarifFormatter -o rubocop.sarif
  after_script:
    - wget -O sarif-converter --quiet https://gitlab.com/ignis-build/sarif-converter/-/releases/permalink/latest/downloads/bin/sarif-converter-linux
    - chmod +x sarif-converter
    - ./sarif-converter --type codequality rubocop.sarif gl-code-quality-report.json
  artifacts:
    name: rubocop
    paths: [ rubocop.sarif ]
    reports:
      codequality: gl-code-quality-report.json
    when: always

test:
  stage: build
  script:
    - ./bin/rails test
  artifacts:
    name: test
    paths: [ ./test/reports/*.xml ]
    reports:
      junit: ./test/reports/*.xml
    when: always

docker:
  image: docker
  services: [ docker:dind ]
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --tag "$DOCKER_IMAGE"  .
    - docker push "$DOCKER_IMAGE"

.azure:
  image: mcr.microsoft.com/azure-cli
  variables:
    AZURE_USER: 826d44eb-aff6-4886-a896-ae653e6d5039
    AZURE_TENANT: b4b14534-61c9-484a-92d3-6c40b05d9c21
    AZURE_RESOURCE_GROUP: cicd
    AZURE_APP_SERVICE: cicd
    AZURE_WEBAPP: ${CI_COMMIT_REF_SLUG}-cicd189
    AZURE_WEBAPP_URL: https://$AZURE_WEBAPP.azurewebsites.net/
  before_script:
    - az login --service-principal -u "$AZURE_USER" -p "$AZURE_PASSWORD" --tenant "$AZURE_TENANT"
    - az configure --defaults group=$AZURE_RESOURCE_GROUP
    - az configure --defaults web=$AZURE_WEBAPP

deploy review:
  extends: .azure
  stage: deploy
  script:
    - |-
      if ! az webapp show &> /dev/null; then
        az webapp create -n "$AZURE_WEBAPP" -p "$AZURE_APP_SERVICE" -i nginx
      fi
    # なんか Rails よーわからんので、development でデプロイした (やっちゃだめだよ!)
    - az webapp config appsettings set --settings RAILS_ENV=development
    - az webapp config container set -i $DOCKER_IMAGE
    - az webapp stop
    - az webapp start
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: $AZURE_WEBAPP_URL
    on_stop: stop review
  needs: [ docker ]
  except:
    - tags
    - master

stop review:
  extends: .azure
  stage: deploy
  script:
    - az webapp delete
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  except:
    - tags
    - master

deploy master:
  extends: .azure
  stage: deploy
  script:
    - |-
      if ! az webapp show &> /dev/null; then
        az webapp create -n "$AZURE_WEBAPP" -p "$AZURE_APP_SERVICE" -i nginx
      fi
    # なんか Rails よーわからんので、development でデプロイした (やっちゃだめだよ!)
    - az webapp config appsettings set --settings RAILS_ENV=development
    - az webapp config container set -i $DOCKER_IMAGE
    - az webapp stop
    - az webapp start
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: $AZURE_WEBAPP_URL
    on_stop: stop review
  needs: [ docker ]
  only:
    - master
